# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
#parameter_name: value

services:
  # default configuration for services in *this* file
  _defaults:
    # automatically injects dependencies in your services
    autowire: true
    # automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # this means you cannot fetch services directly from the container via $container->get()
    # if you need to do this, you can override this setting on individual services
    public: false

  # makes classes in src/AppBundle available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  AppBundle\:
    resource: '../../src/AppBundle/*'
    # you can exclude directories or files
    # but if a service is unused, it's removed anyway
    exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

  # controllers are imported separately to make sure they're public
  # and have a tag that allows actions to type-hint services
  AppBundle\Controller\:
    resource: '../../src/AppBundle/Controller'
    public: true
    tags: ['controller.service_arguments']
  AppBundle\Repository\:
    resource: '../../src/AppBundle/Repository'
  # add more services, or override services that need manual wiring
  # AppBundle\Service\ExampleService:
  #     arguments:
  #         $someArgument: 'some_value'
  admin.employer:
    class: AppBundle\Admin\EmployerAdmin
    arguments: [~, AppBundle\Entity\Employer, ~]
    tags:
      - { name: sonata.admin, manager_type: orm, label: Employer }
    calls:
      - [ setUserManager, ['@fos_user.user_manager'] ]
  admin.unit:
    class: AppBundle\Admin\UnitAdmin
    arguments: [~, AppBundle\Entity\Unit, ~]
    tags:
      - { name: sonata.admin, manager_type: orm, label: Unit }

  my.oauth_aware.user_provider.service:
    class: AppBundle\Security\Core\User\OauthUserProvider
    arguments: ['@fos_user.user_manager', {identifier: email, facebook: facebook, vkontakte: vkontakte}]

  unit.service:
    class: AppBundle\Service\UnitService
    arguments: ['@doctrine.orm.default_entity_manager']
    public: true